// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* log_packet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  log_packet_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_message_2eproto() {
  protobuf_AddDesc_message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message.proto");
  GOOGLE_CHECK(file != NULL);
  log_packet_descriptor_ = file->message_type(0);
  static const int log_packet_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log_packet, log_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log_packet, log_micro_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log_packet, sequence_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log_packet, shm_app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log_packet, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log_packet, log_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log_packet, log_msg_),
  };
  log_packet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      log_packet_descriptor_,
      log_packet::default_instance_,
      log_packet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log_packet, _has_bits_[0]),
      -1,
      -1,
      sizeof(log_packet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(log_packet, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      log_packet_descriptor_, &log_packet::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_2eproto() {
  delete log_packet::default_instance_;
  delete log_packet_reflection_;
}

void protobuf_AddDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_message_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmessage.proto\"\225\001\n\nlog_packet\022\020\n\010log_ti"
    "me\030\001 \002(\006\022\025\n\rlog_micro_sec\030\002 \002(\007\022\023\n\013seque"
    "nce_no\030\003 \002(\007\022\022\n\nshm_app_id\030\004 \002(\007\022\021\n\tpack"
    "et_id\030\005 \002(\t\022\021\n\tlog_level\030\006 \002(\t\022\017\n\007log_ms"
    "g\030\007 \002(\t", 167);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  log_packet::default_instance_ = new log_packet();
  log_packet::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_2eproto {
  StaticDescriptorInitializer_message_2eproto() {
    protobuf_AddDesc_message_2eproto();
  }
} static_descriptor_initializer_message_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int log_packet::kLogTimeFieldNumber;
const int log_packet::kLogMicroSecFieldNumber;
const int log_packet::kSequenceNoFieldNumber;
const int log_packet::kShmAppIdFieldNumber;
const int log_packet::kPacketIdFieldNumber;
const int log_packet::kLogLevelFieldNumber;
const int log_packet::kLogMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

log_packet::log_packet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:log_packet)
}

void log_packet::InitAsDefaultInstance() {
}

log_packet::log_packet(const log_packet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:log_packet)
}

void log_packet::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  log_time_ = GOOGLE_ULONGLONG(0);
  log_micro_sec_ = 0u;
  sequence_no_ = 0u;
  shm_app_id_ = 0u;
  packet_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

log_packet::~log_packet() {
  // @@protoc_insertion_point(destructor:log_packet)
  SharedDtor();
}

void log_packet::SharedDtor() {
  packet_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void log_packet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* log_packet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return log_packet_descriptor_;
}

const log_packet& log_packet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

log_packet* log_packet::default_instance_ = NULL;

log_packet* log_packet::New(::google::protobuf::Arena* arena) const {
  log_packet* n = new log_packet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void log_packet::Clear() {
// @@protoc_insertion_point(message_clear_start:log_packet)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(log_packet, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<log_packet*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(log_time_, sequence_no_);
    shm_app_id_ = 0u;
    if (has_packet_id()) {
      packet_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_log_level()) {
      log_level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_log_msg()) {
      log_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool log_packet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:log_packet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required fixed64 log_time = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &log_time_)));
          set_has_log_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_log_micro_sec;
        break;
      }

      // required fixed32 log_micro_sec = 2;
      case 2: {
        if (tag == 21) {
         parse_log_micro_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &log_micro_sec_)));
          set_has_log_micro_sec();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_sequence_no;
        break;
      }

      // required fixed32 sequence_no = 3;
      case 3: {
        if (tag == 29) {
         parse_sequence_no:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &sequence_no_)));
          set_has_sequence_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_shm_app_id;
        break;
      }

      // required fixed32 shm_app_id = 4;
      case 4: {
        if (tag == 37) {
         parse_shm_app_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &shm_app_id_)));
          set_has_shm_app_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_packet_id;
        break;
      }

      // required string packet_id = 5;
      case 5: {
        if (tag == 42) {
         parse_packet_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_packet_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->packet_id().data(), this->packet_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "log_packet.packet_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_log_level;
        break;
      }

      // required string log_level = 6;
      case 6: {
        if (tag == 50) {
         parse_log_level:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_level()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->log_level().data(), this->log_level().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "log_packet.log_level");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_log_msg;
        break;
      }

      // required string log_msg = 7;
      case 7: {
        if (tag == 58) {
         parse_log_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->log_msg().data(), this->log_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "log_packet.log_msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:log_packet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:log_packet)
  return false;
#undef DO_
}

void log_packet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:log_packet)
  // required fixed64 log_time = 1;
  if (has_log_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->log_time(), output);
  }

  // required fixed32 log_micro_sec = 2;
  if (has_log_micro_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->log_micro_sec(), output);
  }

  // required fixed32 sequence_no = 3;
  if (has_sequence_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->sequence_no(), output);
  }

  // required fixed32 shm_app_id = 4;
  if (has_shm_app_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->shm_app_id(), output);
  }

  // required string packet_id = 5;
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packet_id().data(), this->packet_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "log_packet.packet_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->packet_id(), output);
  }

  // required string log_level = 6;
  if (has_log_level()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_level().data(), this->log_level().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "log_packet.log_level");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->log_level(), output);
  }

  // required string log_msg = 7;
  if (has_log_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_msg().data(), this->log_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "log_packet.log_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->log_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:log_packet)
}

::google::protobuf::uint8* log_packet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:log_packet)
  // required fixed64 log_time = 1;
  if (has_log_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->log_time(), target);
  }

  // required fixed32 log_micro_sec = 2;
  if (has_log_micro_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->log_micro_sec(), target);
  }

  // required fixed32 sequence_no = 3;
  if (has_sequence_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->sequence_no(), target);
  }

  // required fixed32 shm_app_id = 4;
  if (has_shm_app_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->shm_app_id(), target);
  }

  // required string packet_id = 5;
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->packet_id().data(), this->packet_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "log_packet.packet_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->packet_id(), target);
  }

  // required string log_level = 6;
  if (has_log_level()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_level().data(), this->log_level().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "log_packet.log_level");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->log_level(), target);
  }

  // required string log_msg = 7;
  if (has_log_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_msg().data(), this->log_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "log_packet.log_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->log_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:log_packet)
  return target;
}

int log_packet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:log_packet)
  int total_size = 0;

  if (has_log_time()) {
    // required fixed64 log_time = 1;
    total_size += 1 + 8;
  }

  if (has_log_micro_sec()) {
    // required fixed32 log_micro_sec = 2;
    total_size += 1 + 4;
  }

  if (has_sequence_no()) {
    // required fixed32 sequence_no = 3;
    total_size += 1 + 4;
  }

  if (has_shm_app_id()) {
    // required fixed32 shm_app_id = 4;
    total_size += 1 + 4;
  }

  if (has_packet_id()) {
    // required string packet_id = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->packet_id());
  }

  if (has_log_level()) {
    // required string log_level = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_level());
  }

  if (has_log_msg()) {
    // required string log_msg = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_msg());
  }

  return total_size;
}
int log_packet::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:log_packet)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required fixed64 log_time = 1;
    total_size += 1 + 8;

    // required fixed32 log_micro_sec = 2;
    total_size += 1 + 4;

    // required fixed32 sequence_no = 3;
    total_size += 1 + 4;

    // required fixed32 shm_app_id = 4;
    total_size += 1 + 4;

    // required string packet_id = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->packet_id());

    // required string log_level = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_level());

    // required string log_msg = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void log_packet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:log_packet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const log_packet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const log_packet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:log_packet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:log_packet)
    MergeFrom(*source);
  }
}

void log_packet::MergeFrom(const log_packet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:log_packet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_log_time()) {
      set_log_time(from.log_time());
    }
    if (from.has_log_micro_sec()) {
      set_log_micro_sec(from.log_micro_sec());
    }
    if (from.has_sequence_no()) {
      set_sequence_no(from.sequence_no());
    }
    if (from.has_shm_app_id()) {
      set_shm_app_id(from.shm_app_id());
    }
    if (from.has_packet_id()) {
      set_has_packet_id();
      packet_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.packet_id_);
    }
    if (from.has_log_level()) {
      set_has_log_level();
      log_level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_level_);
    }
    if (from.has_log_msg()) {
      set_has_log_msg();
      log_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void log_packet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:log_packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void log_packet::CopyFrom(const log_packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:log_packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool log_packet::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void log_packet::Swap(log_packet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void log_packet::InternalSwap(log_packet* other) {
  std::swap(log_time_, other->log_time_);
  std::swap(log_micro_sec_, other->log_micro_sec_);
  std::swap(sequence_no_, other->sequence_no_);
  std::swap(shm_app_id_, other->shm_app_id_);
  packet_id_.Swap(&other->packet_id_);
  log_level_.Swap(&other->log_level_);
  log_msg_.Swap(&other->log_msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata log_packet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = log_packet_descriptor_;
  metadata.reflection = log_packet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// log_packet

// required fixed64 log_time = 1;
bool log_packet::has_log_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void log_packet::set_has_log_time() {
  _has_bits_[0] |= 0x00000001u;
}
void log_packet::clear_has_log_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void log_packet::clear_log_time() {
  log_time_ = GOOGLE_ULONGLONG(0);
  clear_has_log_time();
}
 ::google::protobuf::uint64 log_packet::log_time() const {
  // @@protoc_insertion_point(field_get:log_packet.log_time)
  return log_time_;
}
 void log_packet::set_log_time(::google::protobuf::uint64 value) {
  set_has_log_time();
  log_time_ = value;
  // @@protoc_insertion_point(field_set:log_packet.log_time)
}

// required fixed32 log_micro_sec = 2;
bool log_packet::has_log_micro_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void log_packet::set_has_log_micro_sec() {
  _has_bits_[0] |= 0x00000002u;
}
void log_packet::clear_has_log_micro_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
void log_packet::clear_log_micro_sec() {
  log_micro_sec_ = 0u;
  clear_has_log_micro_sec();
}
 ::google::protobuf::uint32 log_packet::log_micro_sec() const {
  // @@protoc_insertion_point(field_get:log_packet.log_micro_sec)
  return log_micro_sec_;
}
 void log_packet::set_log_micro_sec(::google::protobuf::uint32 value) {
  set_has_log_micro_sec();
  log_micro_sec_ = value;
  // @@protoc_insertion_point(field_set:log_packet.log_micro_sec)
}

// required fixed32 sequence_no = 3;
bool log_packet::has_sequence_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void log_packet::set_has_sequence_no() {
  _has_bits_[0] |= 0x00000004u;
}
void log_packet::clear_has_sequence_no() {
  _has_bits_[0] &= ~0x00000004u;
}
void log_packet::clear_sequence_no() {
  sequence_no_ = 0u;
  clear_has_sequence_no();
}
 ::google::protobuf::uint32 log_packet::sequence_no() const {
  // @@protoc_insertion_point(field_get:log_packet.sequence_no)
  return sequence_no_;
}
 void log_packet::set_sequence_no(::google::protobuf::uint32 value) {
  set_has_sequence_no();
  sequence_no_ = value;
  // @@protoc_insertion_point(field_set:log_packet.sequence_no)
}

// required fixed32 shm_app_id = 4;
bool log_packet::has_shm_app_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void log_packet::set_has_shm_app_id() {
  _has_bits_[0] |= 0x00000008u;
}
void log_packet::clear_has_shm_app_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void log_packet::clear_shm_app_id() {
  shm_app_id_ = 0u;
  clear_has_shm_app_id();
}
 ::google::protobuf::uint32 log_packet::shm_app_id() const {
  // @@protoc_insertion_point(field_get:log_packet.shm_app_id)
  return shm_app_id_;
}
 void log_packet::set_shm_app_id(::google::protobuf::uint32 value) {
  set_has_shm_app_id();
  shm_app_id_ = value;
  // @@protoc_insertion_point(field_set:log_packet.shm_app_id)
}

// required string packet_id = 5;
bool log_packet::has_packet_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void log_packet::set_has_packet_id() {
  _has_bits_[0] |= 0x00000010u;
}
void log_packet::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void log_packet::clear_packet_id() {
  packet_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_packet_id();
}
 const ::std::string& log_packet::packet_id() const {
  // @@protoc_insertion_point(field_get:log_packet.packet_id)
  return packet_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void log_packet::set_packet_id(const ::std::string& value) {
  set_has_packet_id();
  packet_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:log_packet.packet_id)
}
 void log_packet::set_packet_id(const char* value) {
  set_has_packet_id();
  packet_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:log_packet.packet_id)
}
 void log_packet::set_packet_id(const char* value, size_t size) {
  set_has_packet_id();
  packet_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:log_packet.packet_id)
}
 ::std::string* log_packet::mutable_packet_id() {
  set_has_packet_id();
  // @@protoc_insertion_point(field_mutable:log_packet.packet_id)
  return packet_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* log_packet::release_packet_id() {
  // @@protoc_insertion_point(field_release:log_packet.packet_id)
  clear_has_packet_id();
  return packet_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void log_packet::set_allocated_packet_id(::std::string* packet_id) {
  if (packet_id != NULL) {
    set_has_packet_id();
  } else {
    clear_has_packet_id();
  }
  packet_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), packet_id);
  // @@protoc_insertion_point(field_set_allocated:log_packet.packet_id)
}

// required string log_level = 6;
bool log_packet::has_log_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void log_packet::set_has_log_level() {
  _has_bits_[0] |= 0x00000020u;
}
void log_packet::clear_has_log_level() {
  _has_bits_[0] &= ~0x00000020u;
}
void log_packet::clear_log_level() {
  log_level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_log_level();
}
 const ::std::string& log_packet::log_level() const {
  // @@protoc_insertion_point(field_get:log_packet.log_level)
  return log_level_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void log_packet::set_log_level(const ::std::string& value) {
  set_has_log_level();
  log_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:log_packet.log_level)
}
 void log_packet::set_log_level(const char* value) {
  set_has_log_level();
  log_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:log_packet.log_level)
}
 void log_packet::set_log_level(const char* value, size_t size) {
  set_has_log_level();
  log_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:log_packet.log_level)
}
 ::std::string* log_packet::mutable_log_level() {
  set_has_log_level();
  // @@protoc_insertion_point(field_mutable:log_packet.log_level)
  return log_level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* log_packet::release_log_level() {
  // @@protoc_insertion_point(field_release:log_packet.log_level)
  clear_has_log_level();
  return log_level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void log_packet::set_allocated_log_level(::std::string* log_level) {
  if (log_level != NULL) {
    set_has_log_level();
  } else {
    clear_has_log_level();
  }
  log_level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_level);
  // @@protoc_insertion_point(field_set_allocated:log_packet.log_level)
}

// required string log_msg = 7;
bool log_packet::has_log_msg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void log_packet::set_has_log_msg() {
  _has_bits_[0] |= 0x00000040u;
}
void log_packet::clear_has_log_msg() {
  _has_bits_[0] &= ~0x00000040u;
}
void log_packet::clear_log_msg() {
  log_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_log_msg();
}
 const ::std::string& log_packet::log_msg() const {
  // @@protoc_insertion_point(field_get:log_packet.log_msg)
  return log_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void log_packet::set_log_msg(const ::std::string& value) {
  set_has_log_msg();
  log_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:log_packet.log_msg)
}
 void log_packet::set_log_msg(const char* value) {
  set_has_log_msg();
  log_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:log_packet.log_msg)
}
 void log_packet::set_log_msg(const char* value, size_t size) {
  set_has_log_msg();
  log_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:log_packet.log_msg)
}
 ::std::string* log_packet::mutable_log_msg() {
  set_has_log_msg();
  // @@protoc_insertion_point(field_mutable:log_packet.log_msg)
  return log_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* log_packet::release_log_msg() {
  // @@protoc_insertion_point(field_release:log_packet.log_msg)
  clear_has_log_msg();
  return log_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void log_packet::set_allocated_log_msg(::std::string* log_msg) {
  if (log_msg != NULL) {
    set_has_log_msg();
  } else {
    clear_has_log_msg();
  }
  log_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_msg);
  // @@protoc_insertion_point(field_set_allocated:log_packet.log_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
